{"Man page": "<pre><br><span class=\"headline\">GETTID(2)                 Linux Programmer's Manual                GETTID(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       gettid - get thread identification<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;sys/types.h&gt;</b><br><br>       <b>pid_t gettid(void);</b><br><br>       <i>Note</i>: There is no glibc wrapper for this system call; see NOTES.<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>gettid</b>() returns the caller's thread ID (TID).  In a single-threaded<br>       process, the thread ID is equal to the process ID (PID, as returned<br>       by getpid(2)).  In a multithreaded process, all threads have the same<br>       PID, but each one has a unique TID.  For further details, see the<br>       discussion of <b>CLONE_THREAD </b>in clone(2).<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, returns the thread ID of the calling process.<br></pre><br><h2>ERRORS  </h2><pre><br>       This call is always successful.<br></pre><br><h2>VERSIONS  </h2><pre><br>       The <b>gettid</b>() system call first appeared on Linux in kernel 2.4.11.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       <b>gettid</b>() is Linux-specific and should not be used in programs that<br>       are intended to be portable.<br></pre><br><h2>NOTES  </h2><pre><br>       Glibc does not provide a wrapper for this system call; call it using<br>       syscall(2).<br><br>       The thread ID returned by this call is not the same thing as a POSIX<br>       thread ID (i.e., the opaque value returned by pthread_self(3)).<br><br>       In a new thread group created by a clone(2) call that does not<br>       specify the <b>CLONE_THREAD </b>flag (or, equivalently, a new process<br>       created by fork(2)), the new process is a thread group leader, and<br>       its thread group ID (the value returned by gettid(2)) is the same as<br>       its thread ID (the value returned by <b>gettid</b>()).<br></pre><br><h2>SEE ALSO  </h2><pre><br>       capget(2), clone(2), fcntl(2), fork(2), get_robust_list(2),<br>       gettid(2), ioprio_set(2), perf_event_open(2), sched_setaffinity(2),<br>       sched_setparam(2), sched_setscheduler(2), tgkill(2), timer_create(2)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-07-23                        GETTID(2)</span><br></pre><br>"}