{"Man page": "<pre><br><span class=\"headline\">USELIB(2)                 Linux Programmer's Manual                USELIB(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       uselib - load shared library<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;unistd.h&gt;</b><br><br>       <b>int uselib(const char *</b><i>library</i><b>);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       The system call <b>uselib</b>() serves to load a shared library to be used<br>       by the calling process.  It is given a pathname.  The address where<br>       to load is found in the library itself.  The library can have any<br>       recognized binary format.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, zero is returned.  On error, -1 is returned, and <i>errno</i> is<br>       set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       In addition to all of the error codes returned by open(2) and<br>       mmap(2), the following may also be returned:<br><br>       <b>EACCES </b>The library specified by <i>library</i> does not have read or execute<br>              permission, or the caller does not have search permission for<br>              one of the directories in the path prefix.  (See also<br>              path_resolution(7).)<br><br>       <b>ENFILE </b>The system limit on the total number of open files has been<br>              reached.<br><br>       <b>ENOEXEC</b><br>              The file specified by <i>library</i> is not an executable of a known<br>              type; for example, it does not have the correct magic numbers.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       <b>uselib</b>() is Linux-specific, and should not be used in programs<br>       intended to be portable.<br></pre><br><h2>NOTES  </h2><pre><br>       <b>uselib</b>() was used by early libc startup code to load the shared<br>       libraries with names found in an array of names in the binary.<br><br>       Since libc 4.3.2, startup code tries to prefix these names with<br>       \"/usr/lib\", \"/lib\" and \"\" before giving up.  In libc 4.3.4 and later<br>       these names are looked for in the directories found in<br>       <b>LD_LIBRARY_PATH</b>, and if not found there, prefixes \"/usr/lib\", \"/lib\"<br>       and \"/\" are tried.<br><br>       From libc 4.4.4 on only the library \"/lib/ld.so\" is loaded, so that<br>       this dynamic library can load the remaining libraries needed (again<br>       using this call).  This is also the state of affairs in libc5.<br><br>       glibc2 does not use this call.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       ar(1), gcc(1), ld(1), ldd(1), mmap(2), open(2), dlopen(3),<br>       capabilities(7), ld.so(8)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2005-01-09                        USELIB(2)</span><br></pre><br>"}