{"Man page": "<pre><br><span class=\"headline\">SIGPENDING(2)             Linux Programmer's Manual            SIGPENDING(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       sigpending, rt_sigpending - examine pending signals<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;signal.h&gt;</b><br><br>       <b>int sigpending(sigset_t *</b><i>set</i><b>);</b><br><br>   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):<br><br>       <b>sigpending</b>(): _POSIX_C_SOURCE &gt;= 1 || _XOPEN_SOURCE || _POSIX_SOURCE<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>sigpending</b>() returns the set of signals that are pending for delivery<br>       to the calling thread (i.e., the signals which have been raised while<br>       blocked).  The mask of pending signals is returned in <i>set</i>.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       <b>sigpending</b>() returns 0 on success and -1 on error.  In the event of<br>       an error, <i>errno</i> is set to indicate the cause.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EFAULT </b><i>set</i> points to memory which is not a valid part of the process<br>              address space.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008.<br></pre><br><h2>NOTES  </h2><pre><br>       See sigsetops(3) for details on manipulating signal sets.<br><br>       If a signal is both blocked and has a disposition of \"ignored\", it is<br>       <i>not</i> added to the mask of pending signals when generated.<br><br>       The set of signals that is pending for a thread is the union of the<br>       set of signals that is pending for that thread and the set of signals<br>       that is pending for the process as a whole; see signal(7).<br><br>       A child created via fork(2) initially has an empty pending signal<br>       set; the pending signal set is preserved across an execve(2).<br><br>   <b>C library/kernel differences</b><br>       The original Linux system call was named <b>sigpending</b>().  However, with<br>       the addition of real-time signals in Linux 2.2, the fixed-size,<br>       32-bit <i>sigset_t</i> argument supported by that system call was no longer<br>       fit for purpose.  Consequently, a new system call, <b>rt_sigpending</b>(),<br>       was added to support an enlarged <i>sigset_t</i> type.  The new system call<br>       takes a second argument, <i>size_t sigsetsize</i>, which specifies the size<br>       in bytes of the signal set in <i>set</i>.  The glibc <b>sigpending</b>() wrapper<br>       function hides these details from us, transparently calling<br>       <b>rt_sigpending</b>() when the kernel provides it.<br></pre><br><h2>BUGS  </h2><pre><br>       In versions of glibc up to and including 2.2.1, there is a bug in the<br>       wrapper function for <b>sigpending</b>() which means that information about<br>       pending real-time signals is not correctly returned.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       kill(2), sigaction(2), signal(2), sigprocmask(2), sigsuspend(2),<br>       sigsetops(3), signal(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-07-23                    SIGPENDING(2)</span><br></pre><br>"}