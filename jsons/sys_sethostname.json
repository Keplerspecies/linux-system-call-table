{"Man page": "<pre><br><span class=\"headline\">GETHOSTNAME(2)            Linux Programmer's Manual           GETHOSTNAME(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       gethostname, sethostname - get/set hostname<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;unistd.h&gt;</b><br><br>       <b>int gethostname(char *</b><i>name</i><b>, size_t </b><i>len</i><b>);</b><br>       <b>int sethostname(const char *</b><i>name</i><b>, size_t </b><i>len</i><b>);</b><br><br>   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):<br><br>       <b>gethostname</b>():<br>           Since glibc 2.12: _BSD_SOURCE || _XOPEN_SOURCE &gt;= 500<br>           || /* Since glibc 2.12: */ _POSIX_C_SOURCE &gt;= 200112L<br>       <b>sethostname</b>():<br>           _BSD_SOURCE || (_XOPEN_SOURCE &amp;&amp; _XOPEN_SOURCE &lt; 500)<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       These system calls are used to access or to change the hostname of<br>       the current processor.<br><br>       <b>sethostname</b>() sets the hostname to the value given in the character<br>       array <i>name</i>.  The <i>len</i> argument specifies the number of bytes in <i>name</i>.<br>       (Thus, <i>name</i> does not require a terminating null byte.)<br><br>       <b>gethostname</b>() returns the null-terminated hostname in the character<br>       array <i>name</i>, which has a length of <i>len</i> bytes.  If the null-terminated<br>       hostname is too large to fit, then the name is truncated, and no<br>       error is returned (but see NOTES below).  POSIX.1 says that if such<br>       truncation occurs, then it is unspecified whether the returned buffer<br>       includes a terminating null byte.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, zero is returned.  On error, -1 is returned, and <i>errno</i> is<br>       set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EFAULT </b><i>name</i> is an invalid address.<br><br>       <b>EINVAL </b><i>len</i> is negative or, for <b>sethostname</b>(), <i>len</i> is larger than the<br>              maximum allowed size.<br><br>       <b>ENAMETOOLONG</b><br>              (glibc <b>gethostname</b>()) <i>len</i> is smaller than the actual size.<br>              (Before version 2.1, glibc uses <b>EINVAL </b>for this case.)<br><br>       <b>EPERM  </b>For <b>sethostname</b>(), the caller did not have the <b>CAP_SYS_ADMIN</b><br>              capability.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       SVr4, 4.4BSD  (these interfaces first appeared in 4.2BSD).<br>       POSIX.1-2001 and POSIX.1-2008 specify <b>gethostname</b>() but not<br>       <b>sethostname</b>().<br></pre><br><h2>NOTES  </h2><pre><br>       SUSv2 guarantees that \"Host names are limited to 255 bytes\".  POSIX.1<br>       guarantees that \"Host names (not including the terminating null byte)<br>       are limited to <b>HOST_NAME_MAX </b>bytes\".  On Linux, <b>HOST_NAME_MAX </b>is<br>       defined with the value 64, which has been the limit since Linux 1.0<br>       (earlier kernels imposed a limit of 8 bytes).<br><br>   <b>C library/kernel differences</b><br>       The GNU C library does not employ the <b>gethostname</b>() system call;<br>       instead, it implements <b>gethostname</b>() as a library function that calls<br>       uname(2) and copies up to <i>len</i> bytes from the returned <i>nodename</i> field<br>       into <i>name</i>.  Having performed the copy, the function then checks if<br>       the length of the <i>nodename</i> was greater than or equal to <i>len</i>, and if<br>       it is, then the function returns -1 with <i>errno</i> set to <b>ENAMETOOLONG</b>;<br>       in this case, a terminating null byte is not included in the returned<br>       <i>name</i>.<br><br>       Versions of glibc before 2.2 handle the case where the length of the<br>       <i>nodename</i> was greater than or equal to <i>len</i> differently: nothing is<br>       copied into <i>name</i> and the function returns -1 with <i>errno</i> set to<br>       <b>ENAMETOOLONG</b>.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       getdomainname(2), setdomainname(2), uname(2)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-07-23                   GETHOSTNAME(2)</span><br></pre><br>"}