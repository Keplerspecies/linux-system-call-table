{"Man page": "<pre><br><span class=\"headline\">TIMER_SETTIME(2)          Linux Programmer's Manual         TIMER_SETTIME(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       timer_settime,  timer_gettime  -  arm/disarm and fetch state of POSIX<br>       per-process timer<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;time.h&gt;</b><br><br>       <b>int timer_settime(timer_t </b><i>timerid</i><b>, int </b><i>flags</i><b>,</b><br>                         <b>const struct itimerspec *</b><i>new_value</i><b>,</b><br>                         <b>struct itimerspec *</b><i>old_value</i><b>);</b><br>       <b>int timer_gettime(timer_t </b><i>timerid</i><b>, struct itimerspec *</b><i>curr_value</i><b>);</b><br><br>       Link with <i>-lrt</i>.<br><br>   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):<br><br>       <b>timer_settime</b>(), <b>timer_gettime</b>(): _POSIX_C_SOURCE &gt;= 199309L<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>timer_settime</b>() arms or disarms the timer identified by <i>timerid</i>.  The<br>       <i>new_value</i> argument is pointer to an <i>itimerspec</i> structure that<br>       specifies the new initial value and the new interval for the timer.<br>       The <i>itimerspec</i> structure is defined as follows:<br><br>           struct timespec {<br>               time_t tv_sec;                /* Seconds */<br>               long   tv_nsec;               /* Nanoseconds */<br>           };<br><br>           struct itimerspec {<br>               struct timespec it_interval;  /* Timer interval */<br>               struct timespec it_value;     /* Initial expiration */<br>           };<br><br>       Each of the substructures of the <i>itimerspec</i> structure is a <i>timespec</i><br>       structure that allows a time value to be specified in seconds and<br>       nanoseconds.  These time values are measured according to the clock<br>       that was specified when the timer was created by timer_create(2).<br><br>       If <i>new_value-&gt;it_value</i> specifies a nonzero value (i.e., either<br>       subfield is nonzero), then <b>timer_settime</b>() arms (starts) the timer,<br>       setting it to initially expire at the given time.  (If the timer was<br>       already armed, then the previous settings are overwritten.)  If<br>       <i>new_value-&gt;it_value</i> specifies a zero value (i.e., both subfields are<br>       zero), then the timer is disarmed.<br><br>       The <i>new_value-&gt;it_interval</i> field specifies the period of the timer,<br>       in seconds and nanoseconds.  If this field is nonzero, then each time<br>       that an armed timer expires, the timer is reloaded from the value<br>       specified in <i>new_value-&gt;it_interval</i>.  If <i>new_value-&gt;it_interval</i><br>       specifies a zero value, then the timer expires just once, at the time<br>       specified by <i>it_value</i>.<br><br>       By default, the initial expiration time specified in<br>       <i>new_value-&gt;it_value</i> is interpreted relative to the current time on<br>       the timer's clock at the time of the call.  This can be modified by<br>       specifying <b>TIMER_ABSTIME </b>in <i>flags</i>, in which case <i>new_value-&gt;it_value</i><br>       is interpreted as an absolute value as measured on the timer's clock;<br>       that is, the timer will expire when the clock value reaches the value<br>       specified by <i>new_value-&gt;it_value</i>.  If the specified absolute time has<br>       already passed, then the timer expires immediately, and the overrun<br>       count (see timer_getoverrun(2)) will be set correctly.<br><br>       If the value of the <b>CLOCK_REALTIME </b>clock is adjusted while an<br>       absolute timer based on that clock is armed, then the expiration of<br>       the timer will be appropriately adjusted.  Adjustments to the<br>       <b>CLOCK_REALTIME </b>clock have no effect on relative timers based on that<br>       clock.<br><br>       If <i>old_value</i> is not NULL, then it points to a buffer that is used to<br>       return the previous interval of the timer (in <i>old_value-&gt;it_interval</i>)<br>       and the amount of time until the timer would previously have next<br>       expired (in <i>old_value-&gt;it_value</i>).<br><br>       <b>timer_gettime</b>() returns the time until next expiration, and the<br>       interval, for the timer specified by <i>timerid</i>, in the buffer pointed<br>       to by <i>curr_value</i>.  The time remaining until the next timer expiration<br>       is returned in <i>curr_value-&gt;it_value</i>; this is always a relative value,<br>       regardless of whether the <b>TIMER_ABSTIME </b>flag was used when arming the<br>       timer.  If the value returned in <i>curr_value-&gt;it_value</i> is zero, then<br>       the timer is currently disarmed.  The timer interval is returned in<br>       <i>curr_value-&gt;it_interval</i>.  If the value returned in<br>       <i>curr_value-&gt;it_interval</i> is zero, then this is a \"one-shot\" timer.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>timer_settime</b>() and <b>timer_gettime</b>() return 0.  On error,<br>       -1 is returned, and <i>errno</i> is set to indicate the error.<br></pre><br><h2>ERRORS  </h2><pre><br>       These functions may fail with the following errors:<br><br>       <b>EFAULT </b><i>new_value</i>, <i>old_value</i>, or <i>curr_value</i> is not a valid pointer.<br><br>       <b>EINVAL </b><i>timerid</i> is invalid.<br><br>       <b>timer_settime</b>() may fail with the following errors:<br><br>       <b>EINVAL </b><i>new_value.it_value</i> is negative; or <i>new_value.it_value.tv_nsec</i><br>              is negative or greater than 999,999,999.<br></pre><br><h2>VERSIONS  </h2><pre><br>       These system calls are available since Linux 2.6.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008.<br></pre><br><h2>EXAMPLE  </h2><pre><br>       See timer_create(2).<br></pre><br><h2>SEE ALSO  </h2><pre><br>       timer_create(2), timer_getoverrun(2), time(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08                 TIMER_SETTIME(2)</span><br></pre><br>"}