{"Man page": "<pre><br><span class=\"headline\">SCHED_GET_PRIORITY_MAX(2) Linux Programmer's ManualSCHED_GET_PRIORITY_MAX(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       sched_get_priority_max, sched_get_priority_min  - get static priority<br>       range<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;sched.h&gt;</b><br><br>       <b>int sched_get_priority_max(int </b><i>policy</i><b>);</b><br><br>       <b>int sched_get_priority_min(int </b><i>policy</i><b>);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>sched_get_priority_max</b>() returns the maximum priority value that can<br>       be used with the scheduling algorithm identified by <i>policy</i>.<br>       <b>sched_get_priority_min</b>() returns the minimum priority value that can<br>       be used with the scheduling algorithm identified by <i>policy</i>.<br>       Supported <i>policy</i> values are <b>SCHED_FIFO</b>, <b>SCHED_RR</b>, <b>SCHED_OTHER</b>,<br>       <b>SCHED_BATCH</b>, <b>SCHED_IDLE</b>, and <b>SCHED_DEADLINE</b>.  Further details about<br>       these policies can be found in sched(7).<br><br>       Processes with numerically higher priority values are scheduled<br>       before processes with numerically lower priority values.  Thus, the<br>       value returned by <b>sched_get_priority_max</b>() will be greater than the<br>       value returned by <b>sched_get_priority_min</b>().<br><br>       Linux allows the static priority range 1 to 99 for the <b>SCHED_FIFO </b>and<br>       <b>SCHED_RR </b>policies, and the priority 0 for the remaining policies.<br>       Scheduling priority ranges for the various policies are not<br>       alterable.<br><br>       The range of scheduling priorities may vary on other POSIX systems,<br>       thus it is a good idea for portable applications to use a virtual<br>       priority range and map it to the interval given by<br>       <b>sched_get_priority_max</b>() and <b>sched_get_priority_min </b>POSIX.1 requires<br>       a spread of at least 32 between the maximum and the minimum values<br>       for <b>SCHED_FIFO </b>and <b>SCHED_RR</b>.<br><br>       POSIX systems on which <b>sched_get_priority_max</b>() and<br>       <b>sched_get_priority_min</b>() are available define<br>       <b>_POSIX_PRIORITY_SCHEDULING </b>in <i>&lt;unistd.h&gt;</i>.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>sched_get_priority_max</b>() and <b>sched_get_priority_min</b>()<br>       return the maximum/minimum priority value for the named scheduling<br>       policy.  On error, -1 is returned, and <i>errno</i> is set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EINVAL </b>The argument <i>policy</i> does not identify a defined scheduling<br>              policy.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       sched_getaffinity(2), sched_getparam(2), sched_getscheduler(2),<br>       sched_setaffinity(2), sched_setparam(2), sched_setscheduler(2),<br>       sched(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08        SCHED_GET_PRIORITY_MAX(2)</span><br></pre><br>"}