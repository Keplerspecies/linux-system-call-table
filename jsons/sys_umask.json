{"Man page": "<pre><br><span class=\"headline\">UMASK(2)                  Linux Programmer's Manual                 UMASK(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       umask - set file mode creation mask<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;sys/types.h&gt;</b><br>       <b>#include &lt;sys/stat.h&gt;</b><br><br>       <b>mode_t umask(mode_t </b><i>mask</i><b>);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>umask</b>() sets the calling process's file mode creation mask (umask) to<br>       <i>mask</i> &amp; 0777 (i.e., only the file permission bits of <i>mask</i> are used),<br>       and returns the previous value of the mask.<br><br>       The umask is used by open(2), mkdir(2), and other system calls that<br>       create files to modify the permissions placed on newly created files<br>       or directories.  Specifically, permissions in the umask are turned<br>       off from the <i>mode</i> argument to open(2) and mkdir(2).<br><br>       Alternatively, if the parent directory has a default ACL (see<br>       acl(5)), the umask is ignored, the default ACL is inherited, the<br>       permission bits are set based on the inherited ACL, and permission<br>       bits absent in the <i>mode</i> argument are turned off.  For example, the<br>       following default ACL is equivalent to a umask of 022:<br><br>           u::rwx,g::r-x,o::r-x<br><br>       Combining the effect of this default ACL with a <i>mode</i> argument of 0666<br>       (rw-rw-rw-), the resulting file permissions would be 0644 (rw-<br>       r--r--).<br><br>       The constants that should be used to specify <i>mask</i> are described under<br>       stat(2).<br><br>       The typical default value for the process umask is <i>S_IWGRP | S_IWOTH</i><br>       (octal 022).  In the usual case where the <i>mode</i> argument to open(2) is<br>       specified as:<br><br>           S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH<br><br>       (octal 0666) when creating a new file, the permissions on the<br>       resulting file will be:<br><br>           S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH<br><br>       (because 0666 &amp; ~022 = 0644; i.e., rw-r--r--).<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       This system call always succeeds and the previous value of the mask<br>       is returned.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD.<br></pre><br><h2>NOTES  </h2><pre><br>       A child process created via fork(2) inherits its parent's umask.  The<br>       umask is left unchanged by execve(2).<br><br>       The umask setting also affects the permissions assigned to POSIX IPC<br>       objects (mq_open(3), sem_open(3), shm_open(3)), FIFOs (mkfifo(3)),<br>       and UNIX domain sockets (unix(7)) created by the process.  The umask<br>       does not affect the permissions assigned to System V IPC objects<br>       created by the process (using msgget(2), semget(2), shmget(2)).<br></pre><br><h2>SEE ALSO  </h2><pre><br>       chmod(2), mkdir(2), open(2), stat(2), acl(5)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08                         UMASK(2)</span><br></pre><br>"}