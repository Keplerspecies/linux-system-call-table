{"Man page": "<pre><br><span class=\"headline\">GETPID(2)                 Linux Programmer's Manual                GETPID(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       getpid, getppid - get process identification<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;sys/types.h&gt;</b><br>       <b>#include &lt;unistd.h&gt;</b><br><br>       <b>pid_t getpid(void);</b><br>       <b>pid_t getppid(void);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>getpid</b>() returns the process ID of the calling process.  (This is<br>       often used by routines that generate unique temporary filenames.)<br><br>       <b>getppid</b>() returns the process ID of the parent of the calling<br>       process.<br></pre><br><h2>ERRORS  </h2><pre><br>       These functions are always successful.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008, 4.3BSD, SVr4.<br></pre><br><h2>NOTES  </h2><pre><br>       If the caller's parent is in a different PID namespace (see<br>       pid_namespaces(7)), <b>getppid</b>() returns 0.<br><br>   <b>C library/kernel differences</b><br>       Since glibc version 2.3.4, the glibc wrapper function for <b>getpid</b>()<br>       caches PIDs, so as to avoid additional system calls when a process<br>       calls <b>getpid</b>() repeatedly.  Normally this caching is invisible, but<br>       its correct operation relies on support in the wrapper functions for<br>       fork(2), vfork(2), and clone(2): if an application bypasses the glibc<br>       wrappers for these system calls by using syscall(2), then a call to<br>       <b>getpid</b>() in the child will return the wrong value (to be precise: it<br>       will return the PID of the parent process).  See also clone(2) for<br>       discussion of a case where <b>getpid</b>() may return the wrong value even<br>       when invoking clone(2) via the glibc wrapper function.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       clone(2), fork(2), kill(2), exec(3), mkstemp(3), tempnam(3),<br>       tmpfile(3), tmpnam(3), credentials(7), pid_namespaces(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-07-23                        GETPID(2)</span><br></pre><br>"}