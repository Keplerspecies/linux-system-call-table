{"Man page": "<pre><br><span class=\"headline\">MQ_RECEIVE(3)             Linux Programmer's Manual            MQ_RECEIVE(3)</span><br></pre><br><h2>NAME  </h2><pre><br>       mq_receive, mq_timedreceive - receive a message from a message queue<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;mqueue.h&gt;</b><br><br>       <b>ssize_t mq_receive(mqd_t </b><i>mqdes</i><b>, char *</b><i>msg_ptr</i><b>,</b><br>                          <b>size_t </b><i>msg_len</i><b>, unsigned int *</b><i>msg_prio</i><b>);</b><br><br>       <b>#include &lt;time.h&gt;</b><br>       <b>#include &lt;mqueue.h&gt;</b><br><br>       <b>ssize_t mq_timedreceive(mqd_t </b><i>mqdes</i><b>, char *</b><i>msg_ptr</i><b>,</b><br>                          <b>size_t </b><i>msg_len</i><b>, unsigned int *</b><i>msg_prio</i><b>,</b><br>                          <b>const struct timespec *</b><i>abs_timeout</i><b>);</b><br><br>       Link with <i>-lrt</i>.<br><br>   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):<br><br>       <b>mq_timedreceive</b>():<br>           _XOPEN_SOURCE &gt;= 600 || _POSIX_C_SOURCE &gt;= 200112L<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>mq_receive</b>() removes the oldest message with the highest priority<br>       from the message queue referred to by the descriptor <i>mqdes</i>, and<br>       places it in the buffer pointed to by <i>msg_ptr</i>.  The <i>msg_len</i> argument<br>       specifies the size of the buffer pointed to by <i>msg_ptr</i>; this must be<br>       greater than or equal to the <i>mq_msgsize</i> attribute of the queue (see<br>       mq_getattr(3)).  If <i>msg_prio</i> is not NULL, then the buffer to which it<br>       points is used to return the priority associated with the received<br>       message.<br><br>       If the queue is empty, then, by default, <b>mq_receive</b>() blocks until a<br>       message becomes available, or the call is interrupted by a signal<br>       handler.  If the <b>O_NONBLOCK </b>flag is enabled for the message queue<br>       description, then the call instead fails immediately with the error<br>       <b>EAGAIN</b>.<br><br>       <b>mq_timedreceive</b>() behaves just like <b>mq_receive</b>(), except that if the<br>       queue is empty and the <b>O_NONBLOCK </b>flag is not enabled for the message<br>       queue description, then <i>abs_timeout</i> points to a structure which<br>       specifies how long the call will block.  This value is an absolute<br>       timeout in seconds and nanoseconds since the Epoch, 1970-01-01<br>       00:00:00 +0000 (UTC), specified in the following structure:<br><br>           struct timespec {<br>               time_t tv_sec;        /* seconds */<br>               long   tv_nsec;       /* nanoseconds */<br>           };<br><br>       If no message is available, and the timeout has already expired by<br>       the time of the call, <b>mq_timedreceive</b>() returns immediately.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>mq_receive</b>() and <b>mq_timedreceive</b>() return the number of<br>       bytes in the received message; on error, -1 is returned, with <i>errno</i><br>       set to indicate the error.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EAGAIN </b>The queue was empty, and the <b>O_NONBLOCK </b>flag was set for the<br>              message queue description referred to by <i>mqdes</i>.<br><br>       <b>EBADF  </b>The descriptor specified in <i>mqdes</i> was invalid.<br><br>       <b>EINTR  </b>The call was interrupted by a signal handler; see signal(7).<br><br>       <b>EINVAL </b>The call would have blocked, and <i>abs_timeout</i> was invalid,<br>              either because <i>tv_sec</i> was less than zero, or because <i>tv_nsec</i><br>              was less than zero or greater than 1000 million.<br><br>       <b>EMSGSIZE</b><br>              <i>msg_len</i> was less than the <i>mq_msgsize</i> attribute of the message<br>              queue.<br><br>       <b>ETIMEDOUT</b><br>              The call timed out before a message could be transferred.<br></pre><br><h2>ATTRIBUTES  </h2><pre><br>       For an explanation of the terms used in this section, see<br>       attributes(7).<br><br>       &#9484;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9516;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9516;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9488;<br>       &#9474;<b>Interface                       </b>&#9474; <b>Attribute     </b>&#9474; <b>Value   </b>&#9474;<br>       &#9500;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9532;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9532;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9508;<br>       &#9474;<b>mq_receive</b>(), <b>mq_timedreceive</b>() &#9474; Thread safety &#9474; MT-Safe &#9474;<br>       &#9492;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9524;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9524;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9496;<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008.<br></pre><br><h2>NOTES  </h2><pre><br>       On Linux, <b>mq_timedreceive</b>() is a system call, and <b>mq_receive</b>() is a<br>       library function layered on top of that system call.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       mq_close(3), mq_getattr(3), mq_notify(3), mq_open(3), mq_send(3),<br>       mq_unlink(3), mq_overview(7), time(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08                    MQ_RECEIVE(3)</span><br></pre><br>"}