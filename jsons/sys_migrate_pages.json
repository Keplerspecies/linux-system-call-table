{"Man page": "<pre><br><span class=\"headline\">MIGRATE_PAGES(2)          Linux Programmer's Manual         MIGRATE_PAGES(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       migrate_pages - move all pages in a process to another set of nodes<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;numaif.h&gt;</b><br><br>       <b>long migrate_pages(int </b><i>pid</i><b>, unsigned long </b><i>maxnode,</i><br>                          <b>const unsigned long *</b><i>old_nodes,</i><br>                          <b>const unsigned long *</b><i>new_nodes</i><b>);</b><br><br>       Link with <i>-lnuma</i>.<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>migrate_pages</b>() attempts to move all pages of the process <i>pid</i> that<br>       are in memory nodes <i>old_nodes</i> to the memory nodes in <i>new_nodes</i>.<br>       Pages not located in any node in <i>old_nodes</i> will not be migrated.  As<br>       far as possible, the kernel maintains the relative topology<br>       relationship inside <i>old_nodes</i> during the migration to <i>new_nodes</i>.<br><br>       The <i>old_nodes</i> and <i>new_nodes</i> arguments are pointers to bit masks of<br>       node numbers, with up to <i>maxnode</i> bits in each mask.  These masks are<br>       maintained as arrays of unsigned <i>long</i> integers (in the last <i>long</i><br>       integer, the bits beyond those specified by <i>maxnode</i> are ignored).<br>       The <i>maxnode</i> argument is the maximum node number in the bit mask plus<br>       one (this is the same as in mbind(2), but different from select(2)).<br><br>       The <i>pid</i> argument is the ID of the process whose pages are to be<br>       moved.  To move pages in another process, the caller must be<br>       privileged (<b>CAP_SYS_NICE</b>) or the real or effective user ID of the<br>       calling process must match the real or saved-set user ID of the<br>       target process.  If <i>pid</i> is 0, then <b>migrate_pages</b>() moves pages of the<br>       calling process.<br><br>       Pages shared with another process will be moved only if the<br>       initiating process has the <b>CAP_SYS_NICE </b>privilege.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success <b>migrate_pages</b>() returns the number of pages that could not<br>       be moved (i.e., a return of zero means that all pages were<br>       successfully moved).  On error, it returns -1, and sets <i>errno</i> to<br>       indicate the error.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EFAULT </b>Part or all of the memory range specified by<br>              <i>old_nodes</i>/<i>new_nodes</i> and <i>maxnode</i> points outside your accessible<br>              address space.<br><br>       <b>EINVAL </b>The value specified by <i>maxnode</i> exceeds a kernel-imposed limit.<br>              Or, <i>old_nodes</i> or <i>new_nodes</i> specifies one or more node IDs that<br>              are greater than the maximum supported node ID.  Or, none of<br>              the node IDs specified by <i>new_nodes</i> are on-line and allowed by<br>              the process's current cpuset context, or none of the specified<br>              nodes contain memory.<br><br>       <b>EPERM  </b>Insufficient privilege (<b>CAP_SYS_NICE</b>) to move pages of the<br>              process specified by <i>pid</i>, or insufficient privilege<br>              (<b>CAP_SYS_NICE</b>) to access the specified target nodes.<br><br>       <b>ESRCH  </b>No process matching <i>pid</i> could be found.<br></pre><br><h2>VERSIONS  </h2><pre><br>       The <b>migrate_pages</b>() system call first appeared on Linux in version<br>       2.6.16.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       This system call is Linux-specific.<br></pre><br><h2>NOTES  </h2><pre><br>       For information on library support, see numa(7).<br><br>       Use get_mempolicy(2) with the <b>MPOL_F_MEMS_ALLOWED </b>flag to obtain the<br>       set of nodes that are allowed by the calling process's cpuset.  Note<br>       that this information is subject to change at any time by manual or<br>       automatic reconfiguration of the cpuset.<br><br>       Use of <b>migrate_pages</b>() may result in pages whose location (node)<br>       violates the memory policy established for the specified addresses<br>       (see mbind(2)) and/or the specified process (see set_mempolicy(2)).<br>       That is, memory policy does not constrain the destination nodes used<br>       by <b>migrate_pages</b>().<br><br>       The <i>&lt;numaif.h&gt;</i> header is not included with glibc, but requires<br>       installing <i>libnuma-devel</i> or a similar package.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       get_mempolicy(2), mbind(2), set_mempolicy(2), numa(3), numa_maps(5),<br>       cpuset(7), numa(7), migratepages(8), numastat(8)<br><br>       <i>Documentation/vm/page_migration</i> in the Linux kernel source tree<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-02-21                 MIGRATE_PAGES(2)</span><br></pre><br>"}