{"Man page": "<pre><br><span class=\"headline\">SCHED_RR_GET_INTERVAL(2)  Linux Programmer's Manual SCHED_RR_GET_INTERVAL(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       sched_rr_get_interval  -  get  the  SCHED_RR  interval  for the named<br>       process<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;sched.h&gt;</b><br><br>       <b>int sched_rr_get_interval(pid_t </b><i>pid</i><b>, struct timespec * </b><i>tp</i><b>);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>sched_rr_get_interval</b>() writes into the <i>timespec</i> structure pointed to<br>       by <i>tp</i> the round-robin time quantum for the process identified by <i>pid</i>.<br>       The specified process should be running under the <b>SCHED_RR </b>scheduling<br>       policy.<br><br>       The <i>timespec</i> structure has the following form:<br><br>           struct timespec {<br>               time_t tv_sec;    /* seconds */<br>               long   tv_nsec;   /* nanoseconds */<br>           };<br><br>       If <i>pid</i> is zero, the time quantum for the calling process is written<br>       into <i>*tp</i>.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>sched_rr_get_interval</b>() returns 0.  On error, -1 is<br>       returned, and <i>errno</i> is set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EFAULT </b>Problem with copying information to user space.<br><br>       <b>EINVAL </b>Invalid pid.<br><br>       <b>ENOSYS </b>The system call is not yet implemented (only on rather old<br>              kernels).<br><br>       <b>ESRCH  </b>Could not find a process with the ID <i>pid</i>.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008.<br></pre><br><h2>NOTES  </h2><pre><br>       POSIX systems on which <b>sched_rr_get_interval</b>() is available define<br>       <b>_POSIX_PRIORITY_SCHEDULING </b>in <i>&lt;unistd.h&gt;</i>.<br><br>   <b>Linux notes</b><br>       POSIX does not specify any mechanism for controlling the size of the<br>       round-robin time quantum.  Older Linux kernels provide a<br>       (nonportable) method of doing this.  The quantum can be controlled by<br>       adjusting the process's nice value (see setpriority(2)).  Assigning a<br>       negative (i.e., high) nice value results in a longer quantum;<br>       assigning a positive (i.e., low) nice value results in a shorter<br>       quantum.  The default quantum is 0.1 seconds; the degree to which<br>       changing the nice value affects the quantum has varied somewhat<br>       across kernel versions.  This method of adjusting the quantum was<br>       removed starting with Linux 2.6.24.<br><br>       Linux 3.9 added a new mechanism for adjusting (and viewing) the<br>       <b>SCHED_RR </b>quantum: the <i>/proc/sys/kernel/sched_rr_timeslice_ms</i> file<br>       exposes the quantum as a millisecond value, whose default is 100.<br>       Writing 0 to this file resets the quantum to the default value.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       sched(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08         SCHED_RR_GET_INTERVAL(2)</span><br></pre><br>"}