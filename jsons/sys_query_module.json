{"Man page": "<pre><br><span class=\"headline\">QUERY_MODULE(2)           Linux Programmer's Manual          QUERY_MODULE(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       query_module  -  query the kernel for various bits pertaining to mod&#8208;<br>       ules<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;linux/module.h&gt;</b><br><br>       <b>int query_module(const char *</b><i>name</i><b>, int </b><i>which</i><b>, void *</b><i>buf</i><b>,</b><br>                        <b>size_t </b><i>bufsize</i><b>, size_t *</b><i>ret</i><b>);</b><br><br>       <i>Note</i>: No declaration of this function is provided in glibc headers;<br>       see NOTES.<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <i>Note</i>: This system call is present only in kernels before Linux 2.6.<br><br>       <b>query_module</b>() requests information from the kernel about loadable<br>       modules.  The returned information is placed in the buffer pointed to<br>       by <i>buf</i>.  The caller must specify the size of <i>buf</i> in <i>bufsize</i>.  The<br>       precise nature and format of the returned information depend on the<br>       operation specified by <i>which</i>.  Some operations require <i>name</i> to<br>       identify a currently loaded module, some allow <i>name</i> to be NULL,<br>       indicating the kernel proper.<br><br>       The following values can be specified for <i>which</i>:<br><br>       <b>0      </b>Returns success, if the kernel supports <b>query_module</b>().  Used<br>              to probe for availability of the system call.<br><br>       <b>QM_MODULES</b><br>              Returns the names of all loaded modules.  The returned buffer<br>              consists of a sequence of null-terminated strings; <i>ret</i> is set<br>              to the number of modules.<br><br>       <b>QM_DEPS</b><br>              Returns the names of all modules used by the indicated module.<br>              The returned buffer consists of a sequence of null-terminated<br>              strings; <i>ret</i> is set to the number of modules.<br><br>       <b>QM_REFS</b><br>              Returns the names of all modules using the indicated module.<br>              This is the inverse of <b>QM_DEPS</b>.  The returned buffer consists<br>              of a sequence of null-terminated strings; <i>ret</i> is set to the<br>              number of modules.<br><br>       <b>QM_SYMBOLS</b><br>              Returns the symbols and values exported by the kernel or the<br>              indicated module.  The returned buffer is an array of<br>              structures of the following form<br><br>                  struct module_symbol {<br>                      unsigned long value;<br>                      unsigned long name;<br>                  };<br><br>              followed by null-terminated strings.  The value of <i>name</i> is the<br>              character offset of the string relative to the start of <i>buf</i>;<br>              <i>ret</i> is set to the number of symbols.<br><br>       <b>QM_INFO</b><br>              Returns miscellaneous information about the indicated module.<br>              The output buffer format is:<br><br>                  struct module_info {<br>                      unsigned long address;<br>                      unsigned long size;<br>                      unsigned long flags;<br>                  };<br><br>              where <i>address</i> is the kernel address at which the module<br>              resides, <i>size</i> is the size of the module in bytes, and <i>flags</i> is<br>              a mask of <b>MOD_RUNNING</b>, <b>MOD_AUTOCLEAN</b>, and so on, that<br>              indicates the current status of the module (see the Linux<br>              kernel source file <i>include/linux/module.h</i>).  <i>ret</i> is set to the<br>              size of the <i>module_info</i> structure.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, zero is returned.  On error, -1 is returned and <i>errno</i> is<br>       set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EFAULT </b>At least one of <i>name</i>, <i>buf</i>, or <i>ret</i> was outside the program's<br>              accessible address space.<br><br>       <b>EINVAL </b>Invalid <i>which</i>; or <i>name</i> is NULL (indicating \"the kernel\"), but<br>              this is not permitted with the specified value of <i>which</i>.<br><br>       <b>ENOENT </b>No module by that <i>name</i> exists.<br><br>       <b>ENOSPC </b>The buffer size provided was too small.  <i>ret</i> is set to the<br>              minimum size needed.<br><br>       <b>ENOSYS query_module</b>() is not supported in this version of the kernel<br>              (e.g., the kernel is version 2.6 or later).<br></pre><br><h2>VERSIONS  </h2><pre><br>       This system call is present on Linux only up until kernel 2.4; it was<br>       removed in Linux 2.6.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       <b>query_module</b>() is Linux-specific.<br></pre><br><h2>NOTES  </h2><pre><br>       Some of the information that was formerly available via<br>       <b>query_module</b>() can be obtained from <i>/proc/modules</i>, <i>/proc/kallsyms</i>,<br>       and the files under the directory <i>/sys/module</i>.<br><br>       The <b>query_module</b>() system call is not supported by glibc.  No<br>       declaration is provided in glibc headers, but, through a quirk of<br>       history, glibc does export an ABI for this system call.  Therefore,<br>       in order to employ this system call, it is sufficient to manually<br>       declare the interface in your code; alternatively, you can invoke the<br>       system call using syscall(2).<br></pre><br><h2>SEE ALSO  </h2><pre><br>       create_module(2), delete_module(2), get_kernel_syms(2),<br>       init_module(2), lsmod(8), modinfo(8)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2014-05-10                  QUERY_MODULE(2)</span><br></pre><br>"}