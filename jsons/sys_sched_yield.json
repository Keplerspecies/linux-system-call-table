{"Man page": "<pre><br><span class=\"headline\">SCHED_YIELD(2)            Linux Programmer's Manual           SCHED_YIELD(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       sched_yield - yield the processor<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;sched.h&gt;</b><br><br>       <b>int sched_yield(void);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>sched_yield</b>() causes the calling thread to relinquish the CPU.  The<br>       thread is moved to the end of the queue for its static priority and a<br>       new thread gets to run.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>sched_yield</b>() returns 0.  On error, -1 is returned, and<br>       <i>errno</i> is set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       In the Linux implementation, <b>sched_yield</b>() always succeeds.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008.<br></pre><br><h2>NOTES  </h2><pre><br>       If the calling thread is the only thread in the highest priority list<br>       at that time, it will continue to run after a call to <b>sched_yield</b>().<br><br>       POSIX systems on which <b>sched_yield</b>() is available define<br>       <b>_POSIX_PRIORITY_SCHEDULING </b>in <i>&lt;unistd.h&gt;</i>.<br><br>       Strategic calls to <b>sched_yield</b>() can improve performance by giving<br>       other threads or processes a chance to run when (heavily) contended<br>       resources (e.g., mutexes) have been released by the caller.  Avoid<br>       calling <b>sched_yield</b>() unnecessarily or inappropriately (e.g., when<br>       resources needed by other schedulable threads are still held by the<br>       caller), since doing so will result in unnecessary context switches,<br>       which will degrade system performance.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       sched(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08                   SCHED_YIELD(2)</span><br></pre><br>"}