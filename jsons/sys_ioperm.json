{"Man page": "<pre><br><span class=\"headline\">IOPERM(2)                 Linux Programmer's Manual                IOPERM(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       ioperm - set port input/output permissions<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;sys/io.h&gt; </b>/* for glibc */<br><br>       <b>int ioperm(unsigned long </b><i>from</i><b>, unsigned long </b><i>num</i><b>, int </b><i>turn_on</i><b>);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>ioperm</b>() sets the port access permission bits for the calling thread<br>       for <i>num</i> bits starting from port address <i>from</i>.  If <i>turn_on</i> is nonzero,<br>       then permission for the specified bits is enabled; otherwise it is<br>       disabled.  If <i>turn_on</i> is nonzero, the calling thread must be<br>       privileged (<b>CAP_SYS_RAWIO</b>).<br><br>       Before Linux 2.6.8, only the first 0x3ff I/O ports could be specified<br>       in this manner.  For more ports, the iopl(2) system call had to be<br>       used (with a <i>level</i> argument of 3).  Since Linux 2.6.8, 65,536 I/O<br>       ports can be specified.<br><br>       Permissions are not inherited by the child created by fork(2);<br>       following a fork(2) the child must turn on those permissions that it<br>       needs.  Permissions are preserved across execve(2); this is useful<br>       for giving port access permissions to unprivileged programs.<br><br>       This call is mostly for the i386 architecture.  On many other<br>       architectures it does not exist or will always return an error.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, zero is returned.  On error, -1 is returned, and <i>errno</i> is<br>       set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EINVAL </b>Invalid values for <i>from</i> or <i>num</i>.<br><br>       <b>EIO    </b>(on PowerPC) This call is not supported.<br><br>       <b>ENOMEM </b>Out of memory.<br><br>       <b>EPERM  </b>The calling thread has insufficient privilege.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       <b>ioperm</b>() is Linux-specific and should not be used in programs<br>       intended to be portable.<br></pre><br><h2>NOTES  </h2><pre><br>       The <i>/proc/ioports</i> file shows the I/O ports that are currently<br>       allocated on the system.<br><br>       Glibc has an <b>ioperm</b>() prototype both in <i>&lt;sys/io.h&gt;</i> and in<br>       <i>&lt;sys/perm.h&gt;</i>.  Avoid the latter, it is available on i386 only.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       iopl(2), outb(2), capabilities(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2014-08-19                        IOPERM(2)</span><br></pre><br>"}