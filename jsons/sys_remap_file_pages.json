{"Man page": "<pre><br><span class=\"headline\">REMAP_FILE_PAGES(2)       Linux Programmer's Manual      REMAP_FILE_PAGES(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       remap_file_pages - create a nonlinear file mapping<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#define _GNU_SOURCE         </b>/* See feature_test_macros(7) */<br>       <b>#include &lt;sys/mman.h&gt;</b><br><br>       <b>int remap_file_pages(void *</b><i>addr</i><b>, size_t </b><i>size</i><b>, int </b><i>prot</i><b>,</b><br>                            <b>size_t </b><i>pgoff</i><b>, int </b><i>flags</i><b>);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>Note</b>: this system call is (since Linux 3.16) deprecated and will<br>       eventually be replaced by a slower in-kernel emulation.  Those few<br>       applications that use this system call should consider migrating to<br>       alternatives.<br><br>       The <b>remap_file_pages</b>() system call is used to create a nonlinear<br>       mapping, that is, a mapping in which the pages of the file are mapped<br>       into a nonsequential order in memory.  The advantage of using<br>       <b>remap_file_pages</b>() over using repeated calls to mmap(2) is that the<br>       former approach does not require the kernel to create additional VMA<br>       (Virtual Memory Area) data structures.<br><br>       To create a nonlinear mapping we perform the following steps:<br><br>       1. Use mmap(2) to create a mapping (which is initially linear).  This<br>          mapping must be created with the <b>MAP_SHARED </b>flag.<br><br>       2. Use one or more calls to <b>remap_file_pages</b>() to rearrange the<br>          correspondence between the pages of the mapping and the pages of<br>          the file.  It is possible to map the same page of a file into<br>          multiple locations within the mapped region.<br><br>       The <i>pgoff</i> and <i>size</i> arguments specify the region of the file that is<br>       to be relocated within the mapping: <i>pgoff</i> is a file offset in units<br>       of the system page size; <i>size</i> is the length of the region in bytes.<br><br>       The <i>addr</i> argument serves two purposes.  First, it identifies the<br>       mapping whose pages we want to rearrange.  Thus, <i>addr</i> must be an<br>       address that falls within a region previously mapped by a call to<br>       mmap(2).  Second, <i>addr</i> specifies the address at which the file pages<br>       identified by <i>pgoff</i> and <i>size</i> will be placed.<br><br>       The values specified in <i>addr</i> and <i>size</i> should be multiples of the<br>       system page size.  If they are not, then the kernel rounds <i>both</i><br>       values <i>down</i> to the nearest multiple of the page size.<br><br>       The <i>prot</i> argument must be specified as 0.<br><br>       The <i>flags</i> argument has the same meaning as for mmap(2), but all flags<br>       other than <b>MAP_NONBLOCK </b>are ignored.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>remap_file_pages</b>() returns 0.  On error, -1 is returned,<br>       and <i>errno</i> is set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EINVAL </b><i>addr</i> does not refer to a valid mapping created with the<br>              <b>MAP_SHARED </b>flag.<br><br>       <b>EINVAL </b><i>addr</i>, <i>size</i>, <i>prot</i>, or <i>pgoff</i> is invalid.<br></pre><br><h2>VERSIONS  </h2><pre><br>       The <b>remap_file_pages</b>() system call appeared in Linux 2.5.46; glibc<br>       support was added in version 2.3.3.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       The <b>remap_file_pages</b>() system call is Linux-specific.<br></pre><br><h2>NOTES  </h2><pre><br>       Since Linux 2.6.23, <b>remap_file_pages</b>() creates non-linear mappings<br>       only on in-memory file systems such as tmpfs, hugetlbfs or ramfs.  On<br>       filesystems with a backing store, <b>remap_file_pages</b>() is not much more<br>       efficient than using mmap(2) to adjust which parts of the file are<br>       mapped to which addresses.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       getpagesize(2), mmap(2), mmap2(2), mprotect(2), mremap(2), msync(2)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2014-05-28              REMAP_FILE_PAGES(2)</span><br></pre><br>"}