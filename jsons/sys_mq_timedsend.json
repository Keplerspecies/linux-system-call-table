{"Man page": "<pre><br><span class=\"headline\">MQ_SEND(3)                Linux Programmer's Manual               MQ_SEND(3)</span><br></pre><br><h2>NAME  </h2><pre><br>       mq_send, mq_timedsend - send a message to a message queue<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;mqueue.h&gt;</b><br><br>       <b>int mq_send(mqd_t </b><i>mqdes</i><b>, const char *</b><i>msg_ptr</i><b>,</b><br>                     <b>size_t </b><i>msg_len</i><b>, unsigned int </b><i>msg_prio</i><b>);</b><br><br>       <b>#include &lt;time.h&gt;</b><br>       <b>#include &lt;mqueue.h&gt;</b><br><br>       <b>int mq_timedsend(mqd_t </b><i>mqdes</i><b>, const char *</b><i>msg_ptr</i><b>,</b><br>                     <b>size_t </b><i>msg_len</i><b>, unsigned int </b><i>msg_prio</i><b>,</b><br>                     <b>const struct timespec *</b><i>abs_timeout</i><b>);</b><br><br>       Link with <i>-lrt</i>.<br><br>   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):<br><br>       <b>mq_timedsend</b>():<br>           _XOPEN_SOURCE &gt;= 600 || _POSIX_C_SOURCE &gt;= 200112L<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>mq_send</b>() adds the message pointed to by <i>msg_ptr</i> to the message queue<br>       referred to by the descriptor <i>mqdes</i>.  The <i>msg_len</i> argument specifies<br>       the length of the message pointed to by <i>msg_ptr</i>; this length must be<br>       less than or equal to the queue's <i>mq_msgsize</i> attribute.  Zero-length<br>       messages are allowed.<br><br>       The <i>msg_prio</i> argument is a nonnegative integer that specifies the<br>       priority of this message.  Messages are placed on the queue in<br>       decreasing order of priority, with newer messages of the same<br>       priority being placed after older messages with the same priority.<br><br>       If the message queue is already full (i.e., the number of messages on<br>       the queue equals the queue's <i>mq_maxmsg</i> attribute), then, by default,<br>       <b>mq_send</b>() blocks until sufficient space becomes available to allow<br>       the message to be queued, or until the call is interrupted by a<br>       signal handler.  If the <b>O_NONBLOCK </b>flag is enabled for the message<br>       queue description, then the call instead fails immediately with the<br>       error <b>EAGAIN</b>.<br><br>       <b>mq_timedsend</b>() behaves just like <b>mq_send</b>(), except that if the queue<br>       is full and the <b>O_NONBLOCK </b>flag is not enabled for the message queue<br>       description, then <i>abs_timeout</i> points to a structure which specifies<br>       how long the call will block.  This value is an absolute timeout in<br>       seconds and nanoseconds since the Epoch, 1970-01-01 00:00:00 +0000<br>       (UTC), specified in the following structure:<br><br>           struct timespec {<br>               time_t tv_sec;        /* seconds */<br>               long   tv_nsec;       /* nanoseconds */<br>           };<br><br>       If the message queue is full, and the timeout has already expired by<br>       the time of the call, <b>mq_timedsend</b>() returns immediately.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>mq_send</b>() and <b>mq_timedsend</b>() return zero; on error, -1 is<br>       returned, with <i>errno</i> set to indicate the error.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EAGAIN </b>The queue was full, and the <b>O_NONBLOCK </b>flag was set for the<br>              message queue description referred to by <i>mqdes</i>.<br><br>       <b>EBADF  </b>The descriptor specified in <i>mqdes</i> was invalid.<br><br>       <b>EINTR  </b>The call was interrupted by a signal handler; see signal(7).<br><br>       <b>EINVAL </b>The call would have blocked, and <i>abs_timeout</i> was invalid,<br>              either because <i>tv_sec</i> was less than zero, or because <i>tv_nsec</i><br>              was less than zero or greater than 1000 million.<br><br>       <b>EMSGSIZE</b><br>              <i>msg_len</i> was greater than the <i>mq_msgsize</i> attribute of the<br>              message queue.<br><br>       <b>ETIMEDOUT</b><br>              The call timed out before a message could be transferred.<br></pre><br><h2>ATTRIBUTES  </h2><pre><br>       For an explanation of the terms used in this section, see<br>       attributes(7).<br><br>       &#9484;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9516;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9516;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9488;<br>       &#9474;<b>Interface                 </b>&#9474; <b>Attribute     </b>&#9474; <b>Value   </b>&#9474;<br>       &#9500;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9532;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9532;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9508;<br>       &#9474;<b>mq_send</b>(), <b>mq_timedsend</b>() &#9474; Thread safety &#9474; MT-Safe &#9474;<br>       &#9492;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9524;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9524;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9496;<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008.<br></pre><br><h2>NOTES  </h2><pre><br>       On Linux, <b>mq_timedsend</b>() is a system call, and <b>mq_send</b>() is a library<br>       function layered on top of that system call.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       mq_close(3), mq_getattr(3), mq_notify(3), mq_open(3), mq_receive(3),<br>       mq_unlink(3), mq_overview(7), time(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08                       MQ_SEND(3)</span><br></pre><br>"}