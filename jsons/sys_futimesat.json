{"Man page": "<pre><br><span class=\"headline\">FUTIMESAT(2)              Linux Programmer's Manual             FUTIMESAT(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       futimesat  - change timestamps of a file relative to a directory file<br>       descriptor<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;fcntl.h&gt; /* Definition of AT_* constants */</b><br>       <b>#include &lt;sys/time.h&gt;</b><br><br>       <b>int futimesat(int </b><i>dirfd</i><b>, const char *</b><i>pathname</i><b>,</b><br>                     <b>const struct timeval </b><i>times</i><b>[2]);</b><br><br>   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):<br><br>       <b>futimesat</b>(): _GNU_SOURCE<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       This system call is obsolete.  Use utimensat(2) instead.<br><br>       The <b>futimesat</b>() system call operates in exactly the same way as<br>       utimes(2), except for the differences described in this manual page.<br><br>       If the pathname given in <i>pathname</i> is relative, then it is interpreted<br>       relative to the directory referred to by the file descriptor <i>dirfd</i><br>       (rather than relative to the current working directory of the calling<br>       process, as is done by utimes(2) for a relative pathname).<br><br>       If <i>pathname</i> is relative and <i>dirfd</i> is the special value <b>AT_FDCWD</b>, then<br>       <i>pathname</i> is interpreted relative to the current working directory of<br>       the calling process (like utimes(2)).<br><br>       If <i>pathname</i> is absolute, then <i>dirfd</i> is ignored.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>futimesat</b>() returns a 0.  On error, -1 is returned and<br>       <i>errno</i> is set to indicate the error.<br></pre><br><h2>ERRORS  </h2><pre><br>       The same errors that occur for utimes(2) can also occur for<br>       <b>futimesat</b>().  The following additional errors can occur for<br>       <b>futimesat</b>():<br><br>       <b>EBADF  </b><i>dirfd</i> is not a valid file descriptor.<br><br>       <b>ENOTDIR</b><br>              <i>pathname</i> is relative and <i>dirfd</i> is a file descriptor referring<br>              to a file other than a directory.<br></pre><br><h2>VERSIONS  </h2><pre><br>       <b>futimesat</b>() was added to Linux in kernel 2.6.16; library support was<br>       added to glibc in version 2.4.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       This system call is nonstandard.  It was implemented from a<br>       specification that was proposed for POSIX.1, but that specification<br>       was replaced by the one for utimensat(2).<br><br>       A similar system call exists on Solaris.<br></pre><br><h2>NOTES  </h2><pre><br>   <b>Glibc notes</b><br>       If <i>pathname</i> is NULL, then the glibc <b>futimesat</b>() wrapper function<br>       updates the times for the file referred to by <i>dirfd</i>.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       stat(2), utimensat(2), utimes(2), futimes(3), path_resolution(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2012-05-10                     FUTIMESAT(2)</span><br></pre><br>"}