{"Man page": "<pre><br><span class=\"headline\">MSGGET(2)                 Linux Programmer's Manual                MSGGET(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       msgget - get a System V message queue identifier<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;sys/types.h&gt;</b><br>       <b>#include &lt;sys/ipc.h&gt;</b><br>       <b>#include &lt;sys/msg.h&gt;</b><br><br>       <b>int msgget(key_t </b><i>key</i><b>, int </b><i>msgflg</i><b>);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       The <b>msgget</b>() system call returns the System V message queue<br>       identifier associated with the value of the <i>key</i> argument.  A new<br>       message queue is created if <i>key</i> has the value <b>IPC_PRIVATE </b>or <i>key</i><br>       isn't <b>IPC_PRIVATE</b>, no message queue with the given key <i>key</i> exists,<br>       and <b>IPC_CREAT </b>is specified in <i>msgflg</i>.<br><br>       If <i>msgflg</i> specifies both <b>IPC_CREAT </b>and <b>IPC_EXCL </b>and a message queue<br>       already exists for <i>key</i>, then <b>msgget</b>() fails with <i>errno</i> set to <b>EEXIST</b>.<br>       (This is analogous to the effect of the combination <b>O_CREAT | O_EXCL</b><br>       for open(2).)<br><br>       Upon creation, the least significant bits of the argument <i>msgflg</i><br>       define the permissions of the message queue.  These permission bits<br>       have the same format and semantics as the permissions specified for<br>       the <i>mode</i> argument of open(2).  (The execute permissions are not<br>       used.)<br><br>       If a new message queue is created, then its associated data structure<br>       <i>msqid_ds</i> (see msgctl(2)) is initialized as follows:<br><br>              <i>msg_perm.cuid</i> and <i>msg_perm.uid</i> are set to the effective user<br>              ID of the calling process.<br><br>              <i>msg_perm.cgid</i> and <i>msg_perm.gid</i> are set to the effective group<br>              ID of the calling process.<br><br>              The least significant 9 bits of <i>msg_perm.mode</i> are set to the<br>              least significant 9 bits of <i>msgflg</i>.<br><br>              <i>msg_qnum</i>, <i>msg_lspid</i>, <i>msg_lrpid</i>, <i>msg_stime</i>, and <i>msg_rtime</i> are<br>              set to 0.<br><br>              <i>msg_ctime</i> is set to the current time.<br><br>              <i>msg_qbytes</i> is set to the system limit <b>MSGMNB</b>.<br><br>       If the message queue already exists the permissions are verified, and<br>       a check is made to see if it is marked for destruction.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       If successful, the return value will be the message queue identifier<br>       (a nonnegative integer), otherwise -1 with <i>errno</i> indicating the<br>       error.<br></pre><br><h2>ERRORS  </h2><pre><br>       On failure, <i>errno</i> is set to one of the following values:<br><br>       <b>EACCES </b>A message queue exists for <i>key</i>, but the calling process does<br>              not have permission to access the queue, and does not have the<br>              <b>CAP_IPC_OWNER </b>capability.<br><br>       <b>EEXIST IPC_CREAT </b>and <b>IPC_EXCL </b>were specified in <i>msgflg</i>, but a message<br>              queue already exists for <i>key</i>.<br><br>       <b>ENOENT </b>No message queue exists for <i>key</i> and <i>msgflg</i> did not specify<br>              <b>IPC_CREAT</b>.<br><br>       <b>ENOMEM </b>A message queue has to be created but the system does not have<br>              enough memory for the new data structure.<br><br>       <b>ENOSPC </b>A message queue has to be created but the system limit for the<br>              maximum number of message queues (<b>MSGMNI</b>) would be exceeded.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008, SVr4.<br></pre><br><h2>NOTES  </h2><pre><br>       The inclusion of <i>&lt;sys/types.h&gt;</i> and <i>&lt;sys/ipc.h&gt;</i> isn't required on<br>       Linux or by any version of POSIX.  However, some old implementations<br>       required the inclusion of these header files, and the SVID also<br>       documented their inclusion.  Applications intended to be portable to<br>       such old systems may need to include these header files.<br><br>       <b>IPC_PRIVATE </b>isn't a flag field but a <i>key_t</i> type.  If this special<br>       value is used for <i>key</i>, the system call ignores everything but the<br>       least significant 9 bits of <i>msgflg</i> and creates a new message queue<br>       (on success).<br><br>       The following is a system limit on message queue resources affecting<br>       a <b>msgget</b>() call:<br><br>       <b>MSGMNI </b>System-wide limit on the number of message queues.  Before<br>              Linux 3.19, the default value for this limit was calculated<br>              using a formula based on available system memory.  Since Linux<br>              3.19, the default value is 32,000.  On Linux, this limit can<br>              be read and modified via <i>/proc/sys/kernel/msgmni</i>.<br><br>   <b>Linux notes</b><br>       Until version 2.3.20, Linux would return <b>EIDRM </b>for a <b>msgget</b>() on a<br>       message queue scheduled for deletion.<br></pre><br><h2>BUGS  </h2><pre><br>       The name choice <b>IPC_PRIVATE </b>was perhaps unfortunate, <b>IPC_NEW </b>would<br>       more clearly show its function.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       msgctl(2), msgrcv(2), msgsnd(2), ftok(3), capabilities(7),<br>       mq_overview(7), svipc(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08                        MSGGET(2)</span><br></pre><br>"}