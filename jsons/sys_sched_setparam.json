{"Man page": "<pre><br><span class=\"headline\">SCHED_SETPARAM(2)         Linux Programmer's Manual        SCHED_SETPARAM(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       sched_setparam, sched_getparam - set and get scheduling parameters<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;sched.h&gt;</b><br><br>       <b>int sched_setparam(pid_t </b><i>pid</i><b>, const struct sched_param *</b><i>param</i><b>);</b><br><br>       <b>int sched_getparam(pid_t </b><i>pid</i><b>, struct sched_param *</b><i>param</i><b>);</b><br><br>       <b>struct sched_param {</b><br>           <b>...</b><br>           <b>int </b><i>sched_priority</i><b>;</b><br>           <b>...</b><br>       <b>};</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>sched_setparam</b>() sets the scheduling parameters associated with the<br>       scheduling policy for the process identified by <i>pid</i>.  If <i>pid</i> is zero,<br>       then the parameters of the calling process are set.  The<br>       interpretation of the argument <i>param</i> depends on the scheduling policy<br>       of the process identified by <i>pid</i>.  See sched(7) for a description of<br>       the scheduling policies supported under Linux.<br><br>       <b>sched_getparam</b>() retrieves the scheduling parameters for the process<br>       identified by <i>pid</i>.  If <i>pid</i> is zero, then the parameters of the<br>       calling process are retrieved.<br><br>       <b>sched_setparam</b>() checks the validity of <i>param</i> for the scheduling<br>       policy of the thread.  The value <i>param-&gt;sched_priority</i> must lie<br>       within the range given by sched_get_priority_min(2) and<br>       sched_get_priority_max(2).<br><br>       For a discussion of the privileges and resource limits related to<br>       scheduling priority and policy, see sched(7).<br><br>       POSIX systems on which <b>sched_setparam</b>() and <b>sched_getparam</b>() are<br>       available define <b>_POSIX_PRIORITY_SCHEDULING </b>in <i>&lt;unistd.h&gt;</i>.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>sched_setparam</b>() and <b>sched_getparam</b>() return 0.  On<br>       error, -1 is returned, and <i>errno</i> is set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EINVAL </b>Invalid arguments: <i>param</i> is NULL or <i>pid</i> is negative<br><br>       <b>EINVAL </b>(<b>sched_setparam</b>()) The argument <i>param</i> does not make sense for<br>              the current scheduling policy.<br><br>       <b>EPERM  </b>(<b>sched_setparam</b>()) The calling process does not have<br>              appropriate privileges (Linux: does not have the <b>CAP_SYS_NICE</b><br>              capability).<br><br>       <b>ESRCH  </b>The process whose ID is <i>pid</i> could not be found.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008.<br></pre><br><h2>NOTES  </h2><pre><br>       Scheduling parameters are in fact per-thread attributes on Linux; see<br>       sched(7).<br></pre><br><h2>SEE ALSO  </h2><pre><br>       getpriority(2), nice(2), sched_get_priority_max(2),<br>       sched_get_priority_min(2), sched_getaffinity(2),<br>       sched_getscheduler(2), sched_setaffinity(2), sched_setscheduler(2),<br>       sched_setattr(2), setpriority(2), capabilities(7), sched(7)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08                SCHED_SETPARAM(2)</span><br></pre><br>"}