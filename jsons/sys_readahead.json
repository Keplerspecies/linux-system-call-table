{"Man page": "<pre><br><span class=\"headline\">READAHEAD(2)              Linux Programmer's Manual             READAHEAD(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       readahead - initiate file readahead into page cache<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#define _GNU_SOURCE             </b>/* See feature_test_macros(7) */<br>       <b>#include &lt;fcntl.h&gt;</b><br><br>       <b>ssize_t readahead(int </b><i>fd</i><b>, off64_t </b><i>offset</i><b>, size_t </b><i>count</i><b>);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>readahead</b>() initiates readahead on a file so that subsequent reads<br>       from that file will be satisfied from the cache, and not block on<br>       disk I/O (assuming the readahead was initiated early enough and that<br>       other activity on the system did not in the meantime flush pages from<br>       the cache).<br><br>       The <i>fd</i> argument is a file descriptor identifying the file which is to<br>       be read.  The <i>offset</i> argument specifies the starting point from which<br>       data is to be read and <i>count</i> specifies the number of bytes to be<br>       read.  I/O is performed in whole pages, so that <i>offset</i> is effectively<br>       rounded down to a page boundary and bytes are read up to the next<br>       page boundary greater than or equal to <i>(offset+count)</i>.  <b>readahead</b>()<br>       does not read beyond the end of the file.  The current file offset of<br>       the open file referred to by <i>fd</i> is left unchanged.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, <b>readahead</b>() returns 0; on failure, -1 is returned, with<br>       <i>errno</i> set to indicate the cause of the error.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EBADF  </b><i>fd</i> is not a valid file descriptor or is not open for reading.<br><br>       <b>EINVAL </b><i>fd</i> does not refer to a file type to which <b>readahead</b>() can be<br>              applied.<br></pre><br><h2>VERSIONS  </h2><pre><br>       The <b>readahead</b>() system call appeared in Linux 2.4.13; glibc support<br>       has been provided since version 2.3.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       The <b>readahead</b>() system call is Linux-specific, and its use should be<br>       avoided in portable applications.<br></pre><br><h2>NOTES  </h2><pre><br>       On some 32-bit architectures, the calling signature for this system<br>       call differs, for the reasons described in syscall(2).<br></pre><br><h2>BUGS  </h2><pre><br>       <b>readahead</b>() attempts to schedule the reads in the background and<br>       return immediately.  However, it may block while it reads the<br>       filesystem metadata needed to locate the requested blocks.  This<br>       occurs frequently with ext[234] on large files using indirect blocks<br>       instead of extents, giving the appearance that the call blocks until<br>       the requested data has been read.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       lseek(2), madvise(2), mmap(2), posix_fadvise(2), read(2)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2014-03-15                     READAHEAD(2)</span><br></pre><br>"}