{"Man page": "<pre><br><span class=\"headline\">SOCKETCALL(2)             Linux Programmer's Manual            SOCKETCALL(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       socketcall - socket system calls<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>int socketcall(int </b><i>call</i><b>, unsigned long *</b><i>args</i><b>);</b><br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>socketcall</b>() is a common kernel entry point for the socket system<br>       calls.  <i>call</i> determines which socket function to invoke.  <i>args</i> points<br>       to a block containing the actual arguments, which are passed through<br>       to the appropriate call.<br><br>       User programs should call the appropriate functions by their usual<br>       names.  Only standard library implementors and kernel hackers need to<br>       know about <b>socketcall</b>().<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       This call is specific to Linux, and should not be used in programs<br>       intended to be portable.<br></pre><br><h2>NOTES  </h2><pre><br>       On a some architectures&#8212;for example, x86-64 and ARM&#8212;there is no<br>       <b>socketcall</b>() system call; instead socket(2), accept(2), bind(2), and<br>       so on really are implemented as separate system calls.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       accept(2), bind(2), connect(2), getpeername(2), getsockname(2),<br>       getsockopt(2), listen(2), recv(2), recvfrom(2), recvmsg(2), send(2),<br>       sendmsg(2), sendto(2), setsockopt(2), shutdown(2), socket(2),<br>       socketpair(2)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2012-10-16                    SOCKETCALL(2)</span><br></pre><br>"}