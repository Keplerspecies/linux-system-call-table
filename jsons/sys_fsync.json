{"Man page": "<pre><br><span class=\"headline\">FSYNC(2)                  Linux Programmer's Manual                 FSYNC(2)</span><br></pre><br><h2>NAME  </h2><pre><br>       fsync,  fdatasync  -  synchronize a file's in-core state with storage<br>       device<br></pre><br><h2>SYNOPSIS  </h2><pre><br>       <b>#include &lt;unistd.h&gt;</b><br><br>       <b>int fsync(int </b><i>fd</i><b>);</b><br><br>       <b>int fdatasync(int </b><i>fd</i><b>);</b><br><br>   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):<br><br>       <b>fsync</b>(): _BSD_SOURCE || _XOPEN_SOURCE<br>                || /* since glibc 2.8: */ _POSIX_C_SOURCE &gt;= 200112L<br>       <b>fdatasync</b>(): _POSIX_C_SOURCE &gt;= 199309L || _XOPEN_SOURCE &gt;= 500<br></pre><br><h2>DESCRIPTION  </h2><pre><br>       <b>fsync</b>() transfers (\"flushes\") all modified in-core data of (i.e.,<br>       modified buffer cache pages for) the file referred to by the file<br>       descriptor <i>fd</i> to the disk device (or other permanent storage device)<br>       so that all changed information can be retrieved even after the<br>       system crashed or was rebooted.  This includes writing through or<br>       flushing a disk cache if present.  The call blocks until the device<br>       reports that the transfer has completed.  It also flushes metadata<br>       information associated with the file (see stat(2)).<br><br>       Calling <b>fsync</b>() does not necessarily ensure that the entry in the<br>       directory containing the file has also reached disk.  For that an<br>       explicit <b>fsync</b>() on a file descriptor for the directory is also<br>       needed.<br><br>       <b>fdatasync</b>() is similar to <b>fsync</b>(), but does not flush modified<br>       metadata unless that metadata is needed in order to allow a<br>       subsequent data retrieval to be correctly handled.  For example,<br>       changes to <i>st_atime</i> or <i>st_mtime</i> (respectively, time of last access<br>       and time of last modification; see stat(2)) do not require flushing<br>       because they are not necessary for a subsequent data read to be<br>       handled correctly.  On the other hand, a change to the file size<br>       (<i>st_size</i>, as made by say ftruncate(2)), would require a metadata<br>       flush.<br><br>       The aim of <b>fdatasync</b>() is to reduce disk activity for applications<br>       that do not require all metadata to be synchronized with the disk.<br></pre><br><h2>RETURN VALUE  </h2><pre><br>       On success, these system calls return zero.  On error, -1 is<br>       returned, and <i>errno</i> is set appropriately.<br></pre><br><h2>ERRORS  </h2><pre><br>       <b>EBADF  </b><i>fd</i> is not a valid open file descriptor.<br><br>       <b>EIO    </b>An error occurred during synchronization.<br><br>       <b>EROFS</b>, <b>EINVAL</b><br>              <i>fd</i> is bound to a special file which does not support<br>              synchronization.<br></pre><br><h2>CONFORMING TO  </h2><pre><br>       POSIX.1-2001, POSIX.1-2008, 4.3BSD.<br></pre><br><h2>AVAILABILITY  </h2><pre><br>       On POSIX systems on which <b>fdatasync</b>() is available,<br>       <b>_POSIX_SYNCHRONIZED_IO </b>is defined in <i>&lt;unistd.h&gt;</i> to a value greater<br>       than 0.  (See also sysconf(3).)<br></pre><br><h2>NOTES  </h2><pre><br>       On some UNIX systems (but not Linux), <i>fd</i> must be a <i>writable</i> file<br>       descriptor.<br><br>       In Linux 2.2 and earlier, <b>fdatasync</b>() is equivalent to <b>fsync</b>(), and<br>       so has no performance advantage.<br><br>       The <b>fsync</b>() implementations in older kernels and lesser used<br>       filesystems does not know how to flush disk caches.  In these cases<br>       disk caches need to be disabled using hdparm(8) or <b>sdparm</b>(8) to<br>       guarantee safe operation.<br></pre><br><h2>SEE ALSO  </h2><pre><br>       bdflush(2), open(2), sync(2), sync_file_range(2), hdparm(8),<br>       mount(8), sync(1)<br></pre><br><h2>COLOPHON  </h2><pre><br>       This page is part of release 4.02 of the Linux <i>man-pages</i> project.  A<br>       description of the project, information about reporting bugs, and the<br>       latest version of this page, can be found at<br>       http://www.kernel.org/doc/man-pages/.<br><br><span class=\"footline\">Linux                            2015-08-08                         FSYNC(2)</span><br></pre><br>"}